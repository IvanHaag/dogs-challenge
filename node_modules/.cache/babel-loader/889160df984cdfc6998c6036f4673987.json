{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-challenges\\\\mans-best-friend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useId } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DOGS_API_URLS = {\n  allBreeds: \"https://dog.ceo/api/breeds/list/all\",\n  randomImage: \"https://dog.ceo/api/breeds/image/random\",\n  images: \"https://dog.ceo/api/breed/hound/images\"\n};\nexport const App = () => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [input, setInput] = useState(\"\");\n  let [breed, subBreed] = input.split(\" \");\n  const MAX_ELEMENTS = \"10\";\n  const id = useId();\n  const [breedList, setBreedList] = useState([]);\n  let pivot = \"\";\n  const valid = \"\"; //First Call\n\n  useEffect(() => {\n    console.log(\"called fetch\");\n    fetch(\"https://dog.ceo/api/breeds/image/random/10\").then(response => response.json()).then(data => {\n      console.log(\"response\", data);\n      setImage(data.message);\n    }).catch(err => console.error(\"received error\", err));\n  }, []);\n  useEffect(() => {\n    console.log(\"called fetch\");\n    fetch(\"https://dog.ceo/api/breeds/list/all\").then(response => response.json()).then(data => {\n      console.log(\"response\", data);\n      setBreedList(data.message);\n      console.log(\"breed\");\n      console.log(breedList);\n    }).catch(err => console.error(\"received error\", err));\n  }, []);\n\n  function fullLink() {\n    if (subBreed !== undefined) {\n      pivot = breed;\n      breed = subBreed;\n      subBreed = pivot;\n    }\n\n    let link = \"https://dog.ceo/api/breed/\" + breed;\n\n    if (subBreed !== undefined) {\n      link += \"/\" + subBreed;\n    }\n\n    link += \"/images/random/\" + MAX_ELEMENTS;\n    console.log(link);\n    return link;\n  }\n\n  function handleClick() {\n    breedCheck();\n    fetch(fullLink()).then(response => response.json()).then(data => {\n      console.log(\"response\", data);\n\n      if (data.status !== \"error\") {\n        setImage(data.message);\n      }\n    }).catch(err => console.error(\"received error\", err));\n  }\n\n  function breedCheck() {\n    if (breedList.key === breed) {\n      console.log(\"check\");\n    }\n\n    console.log(\"not check\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Razas de perro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        value: input,\n        onInput: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleClick();\n        },\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: image.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"L4DwlMVbkmjlSxslxC1smG0/kW0=\", false, function () {\n  return [useId];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useId","DOGS_API_URLS","allBreeds","randomImage","images","App","image","setImage","input","setInput","breed","subBreed","split","MAX_ELEMENTS","id","breedList","setBreedList","pivot","valid","console","log","fetch","then","response","json","data","message","catch","err","error","fullLink","undefined","link","handleClick","breedCheck","status","key","e","target","value","map","img"],"sources":["D:/react-challenges/mans-best-friend/src/App.js"],"sourcesContent":["import { useEffect, useState, useId } from \"react\";\nimport \"./App.css\";\n\nconst DOGS_API_URLS = {\n  allBreeds: \"https://dog.ceo/api/breeds/list/all\",\n  randomImage: \"https://dog.ceo/api/breeds/image/random\",\n  images: \"https://dog.ceo/api/breed/hound/images\",\n};\n\nexport const App = () => {\n  const [image, setImage] = useState([]);\n  const [input, setInput] = useState(\"\");\n  let [breed, subBreed] = input.split(\" \");\n  const MAX_ELEMENTS = \"10\";\n  const id = useId();\n  const [breedList, setBreedList] = useState([]);\n  let pivot = \"\";\n  const valid = \"\";\n\n  //First Call\n  useEffect(() => {\n    console.log(\"called fetch\");\n    fetch(\"https://dog.ceo/api/breeds/image/random/10\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"response\", data);\n        setImage(data.message);\n      })\n      .catch((err) => console.error(\"received error\", err));\n  }, []);\n  useEffect(() => {\n    console.log(\"called fetch\");\n    fetch(\"https://dog.ceo/api/breeds/list/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"response\", data);\n        setBreedList(data.message);\n        console.log(\"breed\");\n        console.log(breedList);\n      })\n      .catch((err) => console.error(\"received error\", err));\n  }, []);\n\n  function fullLink() {\n    if (subBreed !== undefined) {\n      pivot = breed;\n      breed = subBreed;\n      subBreed = pivot;\n    }\n    let link = \"https://dog.ceo/api/breed/\" + breed;\n    if (subBreed !== undefined) {\n      link += \"/\" + subBreed;\n    }\n    link += \"/images/random/\" + MAX_ELEMENTS;\n    console.log(link);\n    return link;\n  }\n\n  function handleClick() {\n    breedCheck();\n    fetch(fullLink())\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"response\", data);\n        if (data.status !== \"error\") {\n          setImage(data.message);\n        }\n      })\n      .catch((err) => console.error(\"received error\", err));\n  }\n\n  function breedCheck() {\n    if (breedList.key === breed) {\n      console.log(\"check\");\n    }\n    console.log(\"not check\");\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>Razas de perro</h1>\n        <input\n          id={id}\n          value={input}\n          onInput={(e) => setInput(e.target.value)}\n        ></input>\n        <button\n          onClick={() => {\n            handleClick();\n          }}\n        >\n          search\n        </button>\n      </div>\n      <div>\n        {image.map((img) => (\n          <img src={img} alt=\"\" />\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}